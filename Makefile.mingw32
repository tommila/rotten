# Directories
THIRD_PARTY_DIR := ./third_party
SDL2_DIR := $(THIRD_PARTY_DIR)/SDL2
CGLM_DIR := $(THIRD_PARTY_DIR)/cglm

# Compiler and flags
CXX := /bin/i686-w64-mingw32-g++
CC := /bin/i686-w64-mingw32-gcc

CXXFLAGS := -I/usr/i686-w64-mingw32/include -L/usr/i686-w64-mingw32/lib -g3 -Wall -Wextra -Wno-missing-field-initializers -Wno-unused-parameter -Wno-missing-braces
CFLAGS := -I/usr/i686-w64-mingw32/include -L/usr/i686-w64-mingw32/lib -g3 -Wall -Wextra -Wno-missing-field-initializers -Wno-unused-parameter -Wno-missing-braces

.PHONY: all platform game

all: opengl_renderer platform game

opengl_renderer: ./src/core/opengl_renderer.c
	echo "locking renderer.so" > ./build-w32/librenderer.lock
	$(CC) $< $(CFLAGS) -shared -Wl,--subsystem,windows,--out-implib,./build-w32/renderer.a -o ./build-w32/renderer.dll
	rm ./build-w32/librenderer.lock

game: ./src/game/car_game.cpp ./src/common/rotten_nuklear.o
	echo "locking game.so" > ./build-w32/librottengame.lock

	$(CXX) $< $(CXXFLAGS) ./src/common/rotten_nuklear.o -shared -Wl,--subsystem,windows,--out-implib,./build-w32/librottengame.a -o ./build-w32/rottengame.dll
	rm ./build-w32/librottengame.lock

platform: ./src/sdl_platform.c
	$(CC) $< $(CFLAGS) -D DEV_BUILD=1 -Wl,-rpath,./ -I./third_party/SDL2/i686-w64-mingw32/include/SDL2 -o ./build-w32/rottenmob -lopengl32 -lm -lSDL2main -lSDL2 -L./third_party/SDL2/i686-w64-mingw32/lib
	echo "rottenmob.exe rottengame.dll renderer.dll" > build-w32/run.bat
	echo "wine rottenmob.exe rottengame.dll renderer.dll" > ./build-w32/run_wine.sh
	chmod +x ./build-w32/run_wine.sh


clean:
	rm -f ./src/common/rotten_nuklear.o ./build-w32/rottenmob ./build-w32/librenderer.dll ./build-w32/librottengame.dll
